import matplotlib.pyplot as plt
import geopandas as gpd
import numpy as np
import pandas as pd

yr = f"2018"
fips_path = 'REDACTED'
data_path = 'REDACTED'

cnty_shape_path = 'cb_2018_us_county_20m.shp'
state_shape_path = 'cb_2018_us_state_20m.shp'

cnty_shape = gpd.read_file(cnty_shape_path)
state_shape = gpd.read_file(state_shape_path)

cnty_shape['county_code'] = cnty_shape['STATEFP']+cnty_shape['COUNTYFP']



df = pd.read_csv(data_path, dtype = str, skipinitialspace=False)
fips = pd.read_csv(fips_path, dtype = str)

df = df.drop(df.loc[: , 'MSK_PCT_BM_ANY_CAREGVR': 'MSK_PCT_BM_ANY_NONMED_TRANSPO'].columns, axis=1)

cnty_shape = cnty_shape.drop(cnty_shape[(cnty_shape['GEOID'] == '02016') & (cnty_shape['STATEFP'] == '02')].index)



#format strings to prepare for numeric type
for col in df:
    df[col] = df[col].str.strip()

df= df.replace(",","",regex=True)


#replace 1-10 with 0
df = df.replace ("1-10", 5)

#replace *** with na
df = df.replace ("***", np.nan)

#convert proportion columns to float
df = df.astype({
    'MSK_BENE_COUNTY_CODE' : str ,
    'MSK_BENE_COUNTY_NAME' : str ,
    'MSK_PROP_BM_ANY_CAREGVR' : float ,
    'MSK_PROP_BM_ANY_CASEMGT' : float ,
    'MSK_PROP_BM_ANY_HCBS' : float ,
    'MSK_PROP_BM_ANY_HOMEBASED' : float ,
    'MSK_PROP_BM_ANY_MEALS' : float ,
    'MSK_PROP_BM_ANY_NONMED_TRANSPO' : float ,
    'MSK_SUM_BM_ANY_CAREGVR' : int ,
    'MSK_SUM_BM_ANY_CASEMGT' : int ,
    'MSK_SUM_BM_ANY_HCBS' : int ,
    'MSK_SUM_BM_ANY_HOMEBASED' : int ,
    'MSK_SUM_BM_ANY_MEALS' : int ,
    'MSK_SUM_BM_ANY_NONMED_TRANSPO' : int ,
    'MSK_TOT_BM' : float
})

#rename columns for counties


df = df.rename(columns = {
    'MSK_BENE_COUNTY_CODE' : 'county FIPS' ,
    'MSK_BENE_COUNTY_NAME' : 'county' ,
    'MSK_PROP_BM_ANY_CAREGVR' : 'Caregiver Support' ,
    'MSK_PROP_BM_ANY_CASEMGT' : 'Case Management' ,
    'MSK_PROP_BM_ANY_HCBS' : 'Any HCBS' ,
    'MSK_PROP_BM_ANY_HOMEBASED' : 'Home-Based Services' ,
    'MSK_PROP_BM_ANY_MEALS' : 'Home-Delivered Meals' ,
    'MSK_PROP_BM_ANY_NONMED_TRANSPO' : 'Non-Medical Transportation' ,
    'MSK_SUM_BM_ANY_CAREGVR' : 'care_sum' ,
    'MSK_SUM_BM_ANY_CASEMGT' : 'casemgmt_sum' ,
    'MSK_SUM_BM_ANY_HCBS' : 'any_hcbs_sum' ,
    'MSK_SUM_BM_ANY_HOMEBASED' : 'home_svcs_sum' ,
    'MSK_SUM_BM_ANY_MEALS' : 'meals_sum' ,
    'MSK_SUM_BM_ANY_NONMED_TRANSPO' :'transp_sum' ,
    'MSK_TOT_BM' : 'total bene months'})



#replace original *** with recalculation

x = 2
while x < 8:

    df.iloc[: , x] = round(df.iloc[: , x].fillna(df.iloc[: , x + 6] / df['total bene months']),4)
    x = x+1

#replace zeros in prop columns to na to recalculate quantile bins
r = 2
while r < 8:

    df.iloc[: , r] = df.iloc[: , r].replace (0, np.nan)
    r = r+1

#Define the desired quantiles
quantiles = [0, .25, .5, .75, 1]



# Calculate quantiles for all prop columns and print them out
i = 2
while i < 8 :
    qq = np.nanquantile(df.iloc[:, i], quantiles)
    
    print(qq)
    i= i+1



#shape and fips

#convert state fip column to int


#merge shape and data
cnty_shape = pd.merge (
    left = cnty_shape,
    right = df,
    left_on= 'county_code',
    right_on= 'county FIPS',
    how= 'left'
)

#define quantile ranges

q_labels= ['quartile 1', 'quartile 2', 'quartile 3', 'quartile 4']

#columns to be maps
prop_cols = ['Caregiver Support', 'Case Management', 'Any HCBS', 'Home-Based Services', 'Home-Delivered Meals', 'Non-Medical Transportation']

#define non-continguous states/territories
pr_vi_gu = cnty_shape[cnty_shape['STATEFP'].isin(['66', '72', '78'])] 
ak = cnty_shape[cnty_shape['STATEFP'].isin(['02'])]
hawaii = cnty_shape[cnty_shape['STATEFP'].isin(['15'])]

bins = {'Caregiver Support_bins': [0,0.0001,0.0006,0.0018,0.0066,0.1308],
        'Case Management_bins': [0, 0.0001,0.0040,0.0161,0.0548,0.4754],
        'Any HCBS_bins': [0,0.0039,	0.0936,	0.1506,	0.2264,	0.6725],
        'Home-Based Services_bins' :[0, 0.0002,0.0160,	0.0462,	0.0892,	0.6089],
        'Home-Delivered Meals_bins' : [0, 0.0001,0.0030,0.0142,0.0392,	0.2790],
        'Non-Medical Transportation_bins' : [0, 0.0007,0.0342,	0.0558,	0.0802,	0.3364]
        }
bins_df = pd.DataFrame(bins)

colors = ['whitesmoke', '#abcae4', '#619bcc', '#316a9a', '#193750']
cmap = ListedColormap(colors)

#iterate over columns
for col in prop_cols:
    #assign quantiles to values in 'care prop'
    cnty_shape[col +'_quantile']=pd.cut(cnty_shape[col] , bins = bins_df[col +'_bins'], labels= ['quantile 0/unknown', 'quantile 1', 'quantile 2', 'quantile 3', 'quantile 4'])
    cnty_shape[col + '_quantile']= cnty_shape[col +'_quantile'].fillna('quantile 0/unknown')    

    labels= ['quantile 0/unknown', 'quantile 1', 'quantile 2', 'quantile 3', 'quantile 4']



    fig, ax = plt.subplots(1, figsize = (18, 14))
    #below line takes out non-contiguous states    
    cnty_shape = cnty_shape[~cnty_shape['STATEFP'].isin(['02', '15', '66', '72', '78'])]
    #ax = cnty_shape.boundary.plot(edgecolor='Black', linewidth=.2, figsize= (10, 5))
    cnty_shape.plot(ax=ax, column=cnty_shape[col + '_quantile'], edgecolor='Black', linewidth=.2, legend= True, cmap=cmap)
    ax.set_xlim(-125,-62)
    ax.axis('off')
   
    # Add Alaska Axis (x, y, width, height)
    akax = fig.add_axes([0.1, 0.17, 0.17, 0.16])


    ak[col + '_quantile'] = pd.cut(ak[col], bins = bins_df[col +'_bins'], labels= ['quantile 0/unknown', 'quantile 1', 'quantile 2', 'quantile 3', 'quantile 4'])
    ak[col +'_quantile']=ak[col +'_quantile'].fillna('quantile 0/unknown')
    #ax = ak.boundary.plot(edgecolor='black', linewidth=.2, figsize= (10, 5))
    ak.plot(ax=akax, column=ak[col + '_quantile'], edgecolor='Black', linewidth=.2,  legend= False, cmap=cmap)
    akax.set_xlim(-200,-120)
    akax.axis('off') 

    # Add Hawaii Axis(x, y, width, height)
    hiax = fig.add_axes([.28, 0.20, 0.1, 0.1])
    hawaii[col + '_quantile'] = pd.cut(hawaii[col], bins = bins_df[col +'_bins'], labels= ['quantile 0/unknown', 'quantile 1', 'quantile 2', 'quantile 3', 'quantile 4'])
    hawaii[col +'_quantile']=hawaii[col +'_quantile'].fillna('quantile 0/unknown')
    #hiax = hawaii.boundary.plot(edgecolor='black', linewidth=.2, figsize= (10, 5))
    hawaii.plot(ax=hiax, column=hawaii[col + '_quantile'], edgecolor='Black', linewidth=.2, legend= False, cmap=cmap)
    hiax.axis('off')

    prax = fig.add_axes([.7,.21,0.07,0.07])
    pr_vi_gu[col + '_quantile'] = pd.cut(pr_vi_gu[col], bins = bins_df[col +'_bins'], labels= ['quantile 0/unknown', 'quantile 1', 'quantile 2', 'quantile 3', 'quantile 4'])
    pr_vi_gu[col +'_quantile']=pr_vi_gu[col +'_quantile'].fillna('quantile 0/unknown')
    #ax = pr_vi_gu.boundary.plot(edgecolor='black', linewidth=.2, figsize= (10, 5))
    pr_vi_gu.plot(ax=prax, column=pr_vi_gu[col + '_quantile'], edgecolor='Black', linewidth=.2,  legend= False, cmap=cmap)
    prax.axis('off')
    
    #change name based on contiguous or not
    plt.savefig(f'n:\\Project\\51960_ACL\\Restricted\\DC1\\Task4&5_Analysis\\Output\\Project 1\\Python\\{yr}_county_all_{col}')
    #plt.show()

   
    plt.savefig(f'n:\\REDACTED')
   
